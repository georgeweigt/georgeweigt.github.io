-- Feynman and Hibbs problem 4-2

e = quote(e) -- clear e

A = (A1(),A2(),A3())
x = (x1,x2,x3)
eta = (eta1,eta2,eta3)

-- Directional derivative (unnormalized)

D(f) = dot(eta,d(f,x))

-- Gaussian integral

G(f) = do(
f = eval(f, eta1^2, i hbar epsilon / m),
f = eval(f, eta2^2, i hbar epsilon / m),
f = eval(f, eta3^2, i hbar epsilon / m),
f = eval(f, eta1, 0),
f = eval(f, eta2, 0),
f = eval(f, eta3, 0),
f (2 pi i hbar epsilon / m)^(3/2)) -- return value

U1 = 1
U2 = i e / (hbar c) dot(eta,A)
U3 = i e / (2 hbar c) dot(eta,D(A))
U4 = 1/2 (i e / (hbar c) dot(eta,A))^2

U = (U1,U2,U3,U4)

V1 = psi()
V2 = D(psi())
V3 = 1/2 D(D(psi()))

V = (V1,V2,V3)

"Verify integral 1"

f = U[1] V[1]

B = G(f)

C = psi() (2 pi i hbar epsilon / m)^(3/2)

check(B == C)

"ok"

"Verify integral 2"

f = U[1] V[2]

B = G(f)

check(B == 0)

"ok"

"Verify integral 3"

f = U[1] V[3]

B = G(1/2 D(D(psi())))

C = i hbar epsilon / (2 m) *
    (2 pi i hbar epsilon / m)^(3/2) *
    (d(psi(),x1,x1) + d(psi(),x2,x2) + d(psi(),x3,x3))

check(B == C)

"ok"

"Verify integral 4"

f = U[2] V[1]

B = G(f)

check(B == 0)

"ok"

"Verify integral 5"

f = U[2] V[2]

B = G(f)

C = i hbar epsilon / m *
    (2 pi i hbar epsilon / m)^(3/2) *
    i e / (hbar c) *
    dot(A,d(psi(),x))

check(B == C)

"ok"

"Verify integral 6"

f = U[2] V[3]

B = G(f)

check(B == 0)

"ok"


"Verify integral 7"

f = U[3] V[1]

B = G(f)

C = i hbar epsilon / m *
    (2 pi i hbar epsilon / m)^(3/2) *
    i e / (2 hbar c) *
    (d(A1(),x1) + d(A2(),x2) + d(A3(),x3)) *
    psi()

check(B == C)

"ok"

"Verify integral 8"

f = U[3] V[2]

B = G(f)

check(B == 0)

"ok"

"Verify integral 9"

f = U[3] V[3]

B = G(f)

B = eval(B,epsilon^(7/2),0) -- discard epsilon^2

check(B == 0)

"ok"

"Verify integral 10"

f = U[4] V[1]

B = G(f)

C = i hbar epsilon / m *
    (2 pi i hbar epsilon / m)^(3/2) *
    1/2 (i e / (hbar c))^2 *
    dot(A,A) *
    psi()

check(B == C)

"ok"

"Verify integral 11"

f = U[4] V[2]

B = G(f)

check(B == 0)

"ok"

"Verify integral 12"

f = U[4] V[3]

B = G(f)

B = eval(B,epsilon^(7/2),0) -- discard epsilon^2

check(B == 0)

"ok"
